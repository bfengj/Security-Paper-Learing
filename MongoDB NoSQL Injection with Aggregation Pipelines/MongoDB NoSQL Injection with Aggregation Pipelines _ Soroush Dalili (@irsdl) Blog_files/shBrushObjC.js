SyntaxHighlighter.brushes.ObjC=function(){var datatypes='char bool BOOL double float int long short id void';var keywords='IBAction IBOutlet SEL YES NO readwrite readonly nonatomic nil NULL ';keywords+='super self copy ';keywords+='break case catch class const copy __finally __exception __try ';keywords+='const_cast continue private public protected __declspec ';keywords+='default delete deprecated dllexport dllimport do dynamic_cast ';keywords+='else enum explicit extern if for friend goto inline ';keywords+='mutable naked namespace new noinline noreturn nothrow ';keywords+='register reinterpret_cast return selectany ';keywords+='sizeof static static_cast struct switch template this ';keywords+='thread throw true false try typedef typeid typename union ';keywords+='using uuid virtual volatile whcar_t while';this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:'comment'},{regex:SyntaxHighlighter.regexLib.multiLineCComments,css:'comment'},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:'string'},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:'string'},{regex:new RegExp('^ *#.*','gm'),css:'preprocessor'},{regex:new RegExp(this.getKeywords(datatypes),'gm'),css:'datatypes'},{regex:new RegExp(this.getKeywords(keywords),'gm'),css:'keyword'},{regex:new RegExp('\\bNS\\w+\\b','g'),css:'keyword'},{regex:new RegExp('@\\w+\\b','g'),css:'keyword'},{regex:new RegExp('@"(?:\\.|(\\\\\\")|[^\\""\\n])*"','g'),css:'string'}];}
SyntaxHighlighter.brushes.ObjC.prototype=new SyntaxHighlighter.Highlighter();SyntaxHighlighter.brushes.ObjC.aliases=['objc','obj-c'];